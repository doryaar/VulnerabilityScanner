const session = require('request-promise').defaults({ jar: true });
const fs = require('fs');

import { Spider } from './model/Spider';
import { Checker } from './model/Checker';

export class Scanner {
  spider: Spider;
  checker: Checker;
  
  constructor(private targetUrl: string, session: any) {
    this.spider = new Spider(targetUrl, session);
    this.checker = new Checker(session);
  }

  async scan() {
    const results = [`Report for ${this.targetUrl}:`];
    const targetLinks = await this.spider.crawl();
    for (const link of targetLinks) {
      const forms = await this.spider.scraper.extractFormsFrom(link);
      let vulnerabilityDetected = false;
      for (const form of forms) {
        // Insert Here Tests for form:
        vulnerabilityDetected = await this.checker.checkXssInForm(form, link, '<ScriPt>alert(1)<sCrIpt>');
        if(vulnerabilityDetected) results.push(`\nThread Detected in ${link} form`);
      }
      
      if (link.includes('=')) {
        // Insert Here url Tests:
        vulnerabilityDetected = await this.checker.checkXssInLink(link, '<ScriPt>alert(1)<sCrIpt>');
        if(vulnerabilityDetected) results.push(`\nThread Detected in ${link} url`);
      }
    }
    fs.writeFileSync('vulnerability-report.txt', results.toString());
  }
}